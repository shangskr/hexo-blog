<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安小歪</title>
  
  
  <link href="https://hexo.shangskr.top/atom.xml" rel="self"/>
  
  <link href="https://hexo.shangskr.top/"/>
  <updated>2023-08-06T06:17:29.160Z</updated>
  <id>https://hexo.shangskr.top/</id>
  
  <author>
    <name>安 skr</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为hexo加一个朋友圈</title>
    <link href="https://hexo.shangskr.top/posts/10.html"/>
    <id>https://hexo.shangskr.top/posts/10.html</id>
    <published>2023-08-06T05:49:06.000Z</published>
    <updated>2023-08-06T06:17:29.160Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://fcircle-doc.yyyzyyyz.cn/" title="文章摘取地点">文章摘取地点</a><br>本人hexo朋友圈由<a href="https://blog.sinzmise.top/" title="`SZ・Ninty`"><code>SZ・Ninty</code></a>提供帮助完成！<br>特别感谢<a href="https://blog.sinzmise.top/" title="@SZ・Ninty">@SZ・Ninty</a>的帮助！<br><details class="folding-tag" cyan hide><summary> 心历路程 </summary>              <div class='content'>              <p>在<a href="https://blog.sinzmise.top/" title="@SZ・Ninty">@SZ・Ninty</a>的帮助下一步一步完成，中间也是出错了emmm因为我打键盘速度过快然后打错了许多单词或者密码emmm导致认为后端部署出问题了呢~最后也是完成了，虽然当时弄得有点迷糊，没有跟上，现在弄清顺序思路了，笑哭.jpg</p>              </div>            </details></p><h2 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h2><p>项目部署分为后端部署和前端部署。</p><h2 id="后端部署概览："><a href="#后端部署概览：" class="headerlink" title="后端部署概览："></a>后端部署概览：</h2><p>后端部署目前提供github，server，docker三种方式，数据库可以选择leancloud，mysql，sqlite，mongodb。<br>自5.x版本以后，leancloud不再作为默认存储，改为更简单易用的sqlite作为默认。(这里数据库不建议用sqlite)<a href="https://blog.sinzmise.top/" title="`SZ・Ninty`"><code>SZ・Ninty</code></a>试过了好像不太行！</p><div class="table-container"><table><thead><tr><th></th><th>leancloud存储</th><th>mysql存储</th><th>sqlite存储</th><th>mongodb存储</th></tr></thead><tbody><tr><td>github部署</td><td>github+leancloud</td><td>github+mysql</td><td>github+sqlite(默认选项)</td><td>github+mongodb</td></tr><tr><td>server部署</td><td>server+leancloud</td><td>server+mysql</td><td>server+sqlite</td><td>server+mongodb</td></tr><tr><td>docker部署</td><td>docker+leancloud</td><td>docker+mysql</td><td>docker+sqlite</td><td>docker+mongodb</td></tr></tbody></table></div><p>部署方法：github+vercel+mongodb<br>fork友链朋友圈的项目仓库，地址：<a href="https://github.com/Rock-Candy-Tea/hexo-circle-of-friends">https://github.com/Rock-Candy-Tea/hexo-circle-of-friends</a> 注意：如果前端部署采用<a href="https://fcircle-doc.yyyzyyyz.cn/#/frontenddeploy" title="带管理面板的前端方案">带管理面板的前端方案</a>，则fork时不要修改仓库名称，否则会导致管理面板部分功能不可用。<br>编辑<code>/hexo_circle_of_friends/fc_settings.yaml</code>文件，需要修改的配置如下：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">LINK:</span></span><br><span class="line">    <span class="bullet">-</span> &#123;<span class="attr">link:</span> <span class="string">&quot;https://www.yyyzyyyz.cn/link/&quot;</span>, <span class="attr">theme:</span> <span class="string">&quot;butterfly&quot;</span>&#125;  <span class="comment"># link改为你的友链页地址，theme选择你的博客主题</span></span><br></pre></td></tr></table></figure><br>然后点击仓库的Settings—&gt;Secrets—&gt;New repository secret<br><img src="https://fcircle-doc.yyyzyyyz.cn/QQ%E5%9B%BE%E7%89%8720220205080305.png" alt=""><br>添加2个环境变量secret：<br><code>MONGODB_URI</code> ：mongodb提供的数据库链接以mongodb+srv开头或mongodb开头的<br><code>STORAGE_TYPE</code> ：存储方式，填写mongodb<br>配置完成后，应该如下图所示：<br><img src="https://b2.shangskr.top/%E4%B8%BAhexo%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%9C%8B%E5%8F%8B%E5%9C%88/1.webp" alt=""><br>然后点击仓库的setting—&gt;Actions—&gt;General—&gt;勾选Read and write permissions—&gt;Save<br><img src="https://fcircle-doc.yyyzyyyz.cn/workflow_permissions.png" alt=""><br>前往<a href="https://vercel.com/" title="vercel官网">vercel官网</a>，直接用github创建账号并用手机号绑定。<br>点击New Project新建项目<br>找到Import Git Repository，应该可以看见你刚刚fork的仓库，点击Import。<br><img src="https://fcircle-doc.yyyzyyyz.cn/QQ%E6%88%AA%E5%9B%BE20220205082743.png" alt=""><br>然后添加vercel环境变量,当然也可以Deploy以后在Settings—&gt;Environment Variables添加（注意：VERCEL_ACCESS_TOKEN环境变量只能Deploy以后添加）<br>添加GH_NAME、GH_EMAIL、GH_TOKEN、MONGODB_URI，此外，还需要添加VERCEL_ACCESS_TOKEN<br>GH_TOKEN的获取方法<a href="https://github.com/shangskr/memos-on-replit" title="在这里面的README.md中">在这里面的README.md中</a><br>VERCEL_ACCESS_TOKEN获取方法<br>点击vercel页面右上角的Settings—&gt;Tokens—-&gt;Create<br><img src="https://fcircle-doc.yyyzyyyz.cn/image-20221008231925321.png" alt=""><br>随便输入一个名称后，点击CREATE TOKEN，复制生成的token，添加到vercel环境变量中即可<br><img src="https://fcircle-doc.yyyzyyyz.cn/image-20221008232056360.png" alt=""><br>添加完成后，应该如下图所示：<br><img src="https://b2.shangskr.top/%E4%B8%BAhexo%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%9C%8B%E5%8F%8B%E5%9C%88/2.webp" alt=""><br><div class="note primary flat"><p>2022-8-27，*.vercel.app在中国大陆遭遇污染导致无法访问，友链朋友圈的vercel部署也会受到影响，可以通过解析到自定义域名来解决，或者切换部署方式。</p></div><br>接下来，回到github，打开刚才fork的项目打开hexo_circle_of_friends/fc_settings.yaml（这里我们需要手动添加SETTINGS_FRIENDS_LINKS因为我们的hexo友链魔改过了所以不会自动爬取）<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置项友链</span></span><br><span class="line"><span class="comment"># enable：# 是否启用配置项友链 true/false（针对还未适配主题或者有定制需求的用户）</span></span><br><span class="line"><span class="comment"># json_api：通过json格式配置友链，详见：https://fcircle-doc.yyyzyyyz.cn/#/developmentdoc?id=配置项json友链</span></span><br><span class="line"><span class="comment"># list字段填写格式：[&quot;name&quot;, &quot;link&quot;, &quot;avatar&quot;,&quot;suffix&quot;]，其中：</span></span><br><span class="line"><span class="comment">#       name：必填，友链的名字</span></span><br><span class="line"><span class="comment">#       link：必填，友链主页地址</span></span><br><span class="line"><span class="comment">#       avatar：必填，头像地址</span></span><br><span class="line"><span class="comment">#       suffix：选填，自定义订阅后缀，主要针对不规范的网站订阅后缀，见示例2</span></span><br><span class="line"><span class="attr">SETTINGS_FRIENDS_LINKS:</span> &#123;</span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">json_api:</span> <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">list:</span> [</span><br><span class="line">        <span class="comment"># 示例1：</span></span><br><span class="line">        <span class="comment"># [&quot;贰猹の小窝&quot;, &quot;https://noionion.top/&quot;, &quot;https://pub-noionion.oss-cn-hangzhou.aliyuncs.com/head.jpg&quot;],</span></span><br><span class="line">        <span class="comment"># [&quot;Akilarの糖果屋&quot;, &quot;https://akilar.top/&quot;, &quot;https://akilar.top/images/headimage.png&quot;],</span></span><br><span class="line">        <span class="comment"># 示例2：使用suffix的配置如下</span></span><br><span class="line">        <span class="comment"># 程序目前自动获取 &quot;atom.xml&quot;, &quot;feed/atom&quot;, &quot;rss.xml&quot;, &quot;rss2.xml&quot;, &quot;feed&quot;, &quot;index.xml&quot; 这些后缀</span></span><br><span class="line">        <span class="comment"># 如果目标地址的后缀不在其中，就可以在这里添加</span></span><br><span class="line">        <span class="comment"># 比如 https://elizen.me/hello.xml ，填写：</span></span><br><span class="line">        <span class="comment"># [&quot;elizen&quot;, &quot;https://elizen.me/&quot;, &quot;https://akilar.top/images/headimage.png&quot;, &quot;hello.xml&quot;]</span></span><br><span class="line">        [<span class="string">&quot;九弦之屋&quot;</span>, <span class="string">&quot;https://blog.sinzmise.top/&quot;</span>, <span class="string">&quot;https://sinzmiseblog.netlify.app/img/avatar.png&quot;</span>],</span><br><span class="line">        [<span class="string">&quot;千寻&quot;</span>, <span class="string">&quot;https://blog.qianxun7747.eu.org/&quot;</span>, <span class="string">&quot;https://cdn.staticaly.com/gh/qianxun7747/picx-images-hosting@master/xxx/tx.63ep7yknivg0.jpg&quot;</span>],</span><br><span class="line">        [<span class="string">&quot;福福不服&quot;</span>, <span class="string">&quot;https://ffbf.top/&quot;</span>, <span class="string">&quot;https://ffbf.top/upload/logo3.jpeg&quot;</span>],</span><br><span class="line">        [<span class="string">&quot;轻笑Chuckle&quot;</span>, <span class="string">&quot;https://www.qcqx.cn/&quot;</span>, <span class="string">&quot;https://www.qcqx.cn/img/head.webp&quot;</span>]</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># get links from gitee</span></span><br><span class="line"><span class="comment"># 从gitee issue中获取友链</span></span><br><span class="line"><span class="attr">GITEE_FRIENDS_LINKS:</span> &#123;</span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span>, <span class="comment"># true 开启gitee issue兼容</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">&quot;normal&quot;</span>,  <span class="comment"># volantis/stellar用户请在这里填写volantis</span></span><br><span class="line">    <span class="attr">owner:</span>  <span class="string">&quot;ccknbc&quot;</span>,  <span class="comment"># 填写你的gitee用户名</span></span><br><span class="line">    <span class="attr">repo:</span>  <span class="string">&quot;blogroll&quot;</span>,  <span class="comment"># 填写你的gitee仓库名</span></span><br><span class="line">    <span class="attr">state:</span>  <span class="string">&quot;open&quot;</span>,  <span class="comment"># 填写抓取的issue状态(open/closed)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>接下来，回到github，启用fork后仓库的github action，点击Actions—&gt;I understand my workflows, go ahead and enable them<br><img src="https://fcircle-doc.yyyzyyyz.cn/QQ%E6%88%AA%E5%9B%BE20220205081120.png" alt=""><br>之后点击update-friends-posts并启用workflow<br><img src="https://fcircle-doc.yyyzyyyz.cn/QQ%E6%88%AA%E5%9B%BE20220205081424.png" alt=""><br>然后点击Run workflow—-&gt;Run workflow进行第一次运行<br><img src="https://fcircle-doc.yyyzyyyz.cn/image-20221008232746973.png" alt=""><br>等待运行完毕后，仓库应该会上传data.db，并且vercel也会同步更新。<br><a href="https://fcircle-doc.yyyzyyyz.cn/#/settings" title="其他的数据库配置请看这里">其他的数据库配置请看这里</a></p><h2 id="前端部署概览：教程摘自安知鱼大佬"><a href="#前端部署概览：教程摘自安知鱼大佬" class="headerlink" title="前端部署概览：教程摘自安知鱼大佬"></a>前端部署概览：教程摘自<a href="https://blog.anheyu.com/posts/3753.html" title="安知鱼大佬">安知鱼大佬</a></h2><p>前端采用<a href="https://blog.anheyu.com/posts/3753.html" title="安知鱼方案">安知鱼方案</a><br>安装插件<br>在博客根目录<code>[Blogroot]</code>下打开终端，运行以下指令（与旧版前端方案不兼容，如有安装旧版请先卸载）：（这里我只运行了第一个插件，请自行选择）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-butterfly-fcircle --save</span><br><span class="line">npm uninstall hexo-filter-fcircle --save</span><br><span class="line">npm install hexo-filter-fcircle-anzhiyu --save</span><br></pre></td></tr></table></figure><br>添加配置信息<br>在站点配置文件<code>_config.yml</code>或者主题配置文件例如<code>_config.butterfly.yml</code>中添加<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># fcircle</span><br><span class="line"># see https://anheyu.com/posts/3753.html</span><br><span class="line">fcircle:</span><br><span class="line">  enable: true #控制开关</span><br><span class="line">  apiurl: https://friends.shangskr.top/ #api地址</span><br><span class="line">  initnumber: 30 #【可选】页面初始化展示文章数量</span><br><span class="line">  stepnumber: 30 #【可选】每次加载增加的篇数</span><br><span class="line">  css: https://npm.elemecdn.com/hexo-filter-fcircle-anzhiyu@1.1.2/assets/css/default.css #【可选】开发者接口，自定义css链接</span><br><span class="line">  js: https://npm.elemecdn.com/hexo-filter-fcircle-anzhiyu@1.1.2/assets/js/fcircle.js #【可选】开发者接口，自定义js链接</span><br><span class="line">  fetchJs: https://npm.elemecdn.com/hexo-filter-fcircle-anzhiyu@1.1.2/assets/js/fetch.js</span><br><span class="line">  randomFriendsPostJS: https://npm.elemecdn.com/hexo-filter-fcircle-anzhiyu@1.1.2/assets/js/random-friends-post.js</span><br><span class="line">  topIcon: fas fa-arrow-right</span><br><span class="line">  topLink: /about/</span><br><span class="line">  top_background: https://hexo.shangskr.top/img/guangyu.jpg</span><br><span class="line">  path: /fcircle #【可选】fcircle的路径名称。默认为 fcircle，生成的页面为 fcircle/index.html</span><br><span class="line">  front_matter: #【可选】fcircle页面的 front_matter 配置</span><br><span class="line">    title: 朋友圈</span><br><span class="line">    comments: false</span><br><span class="line">    aside: false</span><br><span class="line">    top_img: false</span><br></pre></td></tr></table></figure><br>插件参数释义</p><div class="table-container"><table><thead><tr><th>参数</th><th>备选值/类型</th><th>释义</th></tr></thead><tbody><tr><td>enable</td><td>true/false</td><td>控制开关</td></tr><tr><td>apiurl</td><td>URL</td><td>api 链接，配置教程参看<a href="https://fcircle-doc.js.cool/#/backenddeploy" title="后端部署文档">后端部署文档</a></td></tr><tr><td>initnumber</td><td>number</td><td>【可选】填写阿拉伯数字，页面展示文章数量，默认 20</td></tr><tr><td>stepnumber</td><td>number</td><td>【可选】填写阿拉伯数字，每次加载增加的篇数，默认 10</td></tr><tr><td>error_img</td><td>URL</td><td>【可选】头像图片加载失败时的默认头像</td></tr><tr><td>css</td><td>URL</td><td>【可选】开发者接口，自定义 css 链接</td></tr><tr><td>js</td><td>URL</td><td>【可选】开发者接口，自定义 js 链接</td></tr><tr><td>fetchJs</td><td>URL</td><td>【可选】开发者接口，自定义 fetchJs 链接</td></tr><tr><td>randomFriendsPostJS</td><td>URL</td><td>【可选】开发者接口，自定义 randomFriendsPostJS 链接</td></tr><tr><td>path</td><td>string</td><td>【可选】字符串，fcircle 的路径名称。默认为 fcircle，生成的页面为 fcircle/index.html</td></tr><tr><td>topIcon</td><td>string</td><td>【可选】字符串，顶部按钮的图标类名</td></tr><tr><td>topLink</td><td>URL</td><td>【可选】字符串，顶部按钮点击跳转的链接（仅支持 pjax 跳转</td></tr><tr><td>front_matter</td><td>object</td><td>【可选】写法见上文示例，fcircle 页面的 front_matter 配置</td></tr><tr><td>top_background</td><td>URL</td><td>【可选】字符串，页面顶部模块背景图</td></tr></tbody></table></div><p>顶部图片样式修改<br>可以通过配置项top_background修改<br>最后添加到主题文件的_config.yml中的menu:<br>朋友圈: /fcircle/ ||<br>就完成了</p>]]></content>
    
    
    <summary type="html">朋友圈咯~</summary>
    
    
    
    <category term="hexo" scheme="https://hexo.shangskr.top/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://hexo.shangskr.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>为你的站点加一个监控吧！</title>
    <link href="https://hexo.shangskr.top/posts/9.html"/>
    <id>https://hexo.shangskr.top/posts/9.html</id>
    <published>2023-07-16T01:09:06.000Z</published>
    <updated>2023-07-16T01:18:41.806Z</updated>
    
    <content type="html"><![CDATA[<h2 id="演示：安小歪的网站状态"><a href="#演示：安小歪的网站状态" class="headerlink" title="演示：安小歪的网站状态"></a>演示：<a href="https://status.shangskr.top/" title="安小歪的网站状态">安小歪的网站状态</a></h2><p><img src="https://b2.shangskr.top/uptime-robot/18.webp" alt=""></p><h2 id="首先要在uptimerobot注册一个账号，然后到邮箱去激活就好了。"><a href="#首先要在uptimerobot注册一个账号，然后到邮箱去激活就好了。" class="headerlink" title="首先要在uptimerobot注册一个账号，然后到邮箱去激活就好了。"></a>首先要在<a href="https://uptimerobot.com/" title="uptimerobot">uptimerobot</a>注册一个账号，然后到邮箱去激活就好了。</h2><p><img src="https://b2.shangskr.top/uptime-robot/1.webp" alt=""><br><img src="https://b2.shangskr.top/uptime-robot/2.webp" alt=""></p><h2 id="然后到-UptimeRobot-，在-My-Settings-页面你可以添加多种接受通知的方式"><a href="#然后到-UptimeRobot-，在-My-Settings-页面你可以添加多种接受通知的方式" class="headerlink" title="然后到 UptimeRobot ，在 My Settings 页面你可以添加多种接受通知的方式"></a>然后到 UptimeRobot ，在 My Settings 页面你可以添加多种接受通知的方式</h2><p><img src="https://b2.shangskr.top/uptime-robot/4.webp" alt=""><br><img src="https://b2.shangskr.top/uptime-robot/5.webp" alt=""></p><h2 id="接下来需要先到-UptimeRobot-添加站点监控，并在-My-Settings-页面获取-API-Key（免费账户只能监测HEAD，可以添加多个监测的站点和服务）"><a href="#接下来需要先到-UptimeRobot-添加站点监控，并在-My-Settings-页面获取-API-Key（免费账户只能监测HEAD，可以添加多个监测的站点和服务）" class="headerlink" title="接下来需要先到 UptimeRobot 添加站点监控，并在 My Settings 页面获取 API Key（免费账户只能监测HEAD，可以添加多个监测的站点和服务）"></a>接下来需要先到 UptimeRobot 添加站点监控，并在 My Settings 页面获取 API Key（免费账户只能监测HEAD，可以添加多个监测的站点和服务）</h2><p><img src="https://b2.shangskr.top/uptime-robot/3.webp" alt=""><br><img src="https://b2.shangskr.top/uptime-robot/6.webp" alt=""></p><h2 id="创建好以后就是这样子的"><a href="#创建好以后就是这样子的" class="headerlink" title="创建好以后就是这样子的"></a>创建好以后就是这样子的</h2><p><img src="https://b2.shangskr.top/uptime-robot/7.webp" alt=""></p><h2 id="复用这个项目"><a href="#复用这个项目" class="headerlink" title="复用这个项目"></a>复用这个项目</h2><p>1.fork 一份到你的 github 账号下<a href="https://github.com/shangskr/uptime-status/" title="GitHub">GitHub</a><br>2.修改配置文件：<kbd>public/config.js</kbd><br>3.fork完成之后部署到vercel（注意这里部署类型选择other）<br><img src="https://b2.shangskr.top/uptime-robot/8.webp" alt=""><br><img src="https://b2.shangskr.top/uptime-robot/9.webp" alt=""><br>4.这里需要给vercel解析一个域名（因为vercel的提供的域名被墙了）这里以cloudflare为例<br><img src="https://b2.shangskr.top/uptime-robot/12.webp" alt=""><br>然后打开vercel添加域名<br><img src="https://b2.shangskr.top/uptime-robot/10.webp" alt=""><br><img src="https://b2.shangskr.top/uptime-robot/11.webp" alt=""><br><img src="https://b2.shangskr.top/uptime-robot/13.webp" alt=""><br>5.域名解析成功以后打开uptimerobot添加api（uptimerobot提供3种api这里推荐第二个api）<br><img src="https://b2.shangskr.top/uptime-robot/14.webp" alt=""><br><img src="https://b2.shangskr.top/uptime-robot/15.webp" alt=""><br>复制api然后到你刚刚fork仓库的<kbd>public/config.js</kbd>修改api<br><img src="https://b2.shangskr.top/uptime-robot/16.webp" alt=""><br><img src="https://b2.shangskr.top/uptime-robot/17.webp" alt=""><br>最后就完成了！就可以引入到blog页面了<br><img src="https://b2.shangskr.top/uptime-robot/18.webp" alt=""><br><div class="note warning simple"><p>还有一种方案使用cloudflare部署的需要fork这个项目<a href="https://github.com/Ice-Hazymoon/status" title="GitHub">GitHub</a><br>具体教程参考这里<a href="https://www.ngui.cc/el/3077750.html?action=onClick" title="cloudflare部署">cloudflare部署</a></p></div></p>]]></content>
    
    
    <summary type="html">添加一个监控吧！</summary>
    
    
    
    <category term="监控" scheme="https://hexo.shangskr.top/categories/%E7%9B%91%E6%8E%A7/"/>
    
    
    <category term="监控" scheme="https://hexo.shangskr.top/tags/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>用backblaze+cloudflare搭建免费图床</title>
    <link href="https://hexo.shangskr.top/posts/8.html"/>
    <id>https://hexo.shangskr.top/posts/8.html</id>
    <published>2023-05-21T00:12:11.000Z</published>
    <updated>2023-07-15T03:30:44.952Z</updated>
    
    <content type="html"><![CDATA[<h2 id="首先准备一个域名，一个邮箱"><a href="#首先准备一个域名，一个邮箱" class="headerlink" title="首先准备一个域名，一个邮箱"></a>首先准备一个域名，一个邮箱</h2><p>~backbalze的服务器在国外，所以打开会慢emmmm，那么就科学上网（当然不科学上网也可以打开的，那你就看运气吧！）<br>1.在<a href="https://www.cloudflare.com/" title="cloudflare">cloudflare</a>注册并将你的域名加入。（如果不会的话可以看看我以前的文章有说明哦~）<br>2.在<a href="https://www.backblaze.com/b2/cloud-storage.html" title="backblaze">backblaze</a>注册一个账号，并新建一个bucket，记得Files in Bucket are:这里选public就好，就是公开桶。（不然别人无法看到你的图片）避坑：backblaze都是公开的所以大部分不要填写自己的真实信息！！！其实也没什么。<br><img src="https://b2.shangskr.top/B2%2BCF/01.webp" alt=""></p><h2 id="打开backblaze开始配置"><a href="#打开backblaze开始配置" class="headerlink" title="打开backblaze开始配置"></a>打开backblaze开始配置</h2><p>1.这里我用cloudflare演示，首先随便上传一个照片，注意要用到下图的这个友好链接的哦~<br><img src="https://b2.shangskr.top/B2%2BCF/02.webp" alt=""><br>2.打开cloudflare控制页面，找到dns记录 设置如下图填写添加一个记录<br><img src="https://b2.shangskr.top/B2%2BCF/04.webp" alt=""><br>这一步好了以后基本可以用了<br>现在将backblaze链接里面的域名<a href="https://f004.backblazeb2.com/file/tuchuang123/B2%2BCF/03.webp">https://f004.backblazeb2.com/file/tuchuang123/B2%2BCF/03.webp</a><br>改为<a href="https://b2.shangskr.top/file/tuchuang123/B2%2BCF/03.webp(这样，就可以用过cloudflare来访问了">https://b2.shangskr.top/file/tuchuang123/B2%2BCF/03.webp(这样，就可以用过cloudflare来访问了</a>)<br><div class="note warning flat"><p>图床链接最好用backblaze提供的友好链接，然后需要手动换成自己设置的链接，这样就可以了。（如果还是用原来的，岂不是什么也没做）</p></div><br>3.这样基本完成，但是backblaze每天有一定的访问次数限制，这样的话我们利用cloudflare的超强缓存就可以做到无限回流了（无限白嫖哦~亲测有效）<br>打开cloudfalre缓存时间设置。这里可以在cloudflare设置也可以在backblaze设置，当然我都设置了的（吸吸）<br><img src="https://b2.shangskr.top/B2%2BCF/05.webp" alt=""><br>接下来在cloudflare设置一个转换规则(因为图床的链接还是不够简化，用这个转换规则就可以使它更简洁了呢)如图：<br><img src="https://b2.shangskr.top/B2%2BCF/06.webp" alt=""><br><img src="https://b2.shangskr.top/B2%2BCF/07.webp" alt=""><br>concat(“/file/tuchuang123”,http.request.uri.path) 这里的/file/后面改成你自己的桶名<br>这样子原链接<a href="https://f004.backblazeb2.com/file/tuchuang123/B2%2BCF/03.webp">https://f004.backblazeb2.com/file/tuchuang123/B2%2BCF/03.webp</a><br>就可以通过<a href="https://b2.shangskr.top/B2%2BCF/03.webp来访问了">https://b2.shangskr.top/B2%2BCF/03.webp来访问了</a><br>4.在backblaze中设置缓存周期<br><img src="https://b2.shangskr.top/B2%2BCF/08.webp" alt=""><br><img src="https://b2.shangskr.top/B2%2BCF/09.webp" alt=""><br>好了完美了</p><h2 id="光用网页上传也不是个办法啊，那么就用这个"><a href="#光用网页上传也不是个办法啊，那么就用这个" class="headerlink" title="光用网页上传也不是个办法啊，那么就用这个"></a>光用网页上传也不是个办法啊，那么就用这个</h2><p>1.点击App keys,添加一个新的key,bucket就选你刚创建的那个,记录下你的密钥,之后要在ShareX中用！！！<br><img src="https://b2.shangskr.top/B2%2BCF/03.webp" alt=""><br>2.大概就这样了emmmm，累跌<br>配置ShareX.<br><img src="https://b2.shangskr.top/B2%2BCF/10.webp" alt="图片来自https://www.liuzhanwu.com/17373.html" title="图片来自https://www.liuzhanwu.com/17373.html"><br>emmm困死我了，不行了开始偷图片了，不想弄了。<br>差不多这里也就好了，配置好就好了<br>3.扩展工具（来自<a href="https://blog.csdn.net/weixin_43511521/article/details/128438259" title="csdn">csdn</a>）<br>假如你是用的typecho，还可以使用上传插件实现自动上传，无需登录backblaze：<br>typecho - b2file 插件地址：<a href="https://github.com/qq80284445/Typecho-B2File">https://github.com/qq80284445/Typecho-B2File</a><br>另：backblaze支持s3 ，所以你用Picgo等软件上传的话，只需要添加个s3插件就可以了.<br><div class="note primary flat"><p>睡觉觉困死了2023-05-20 22:52:51 星期六</p></div></p>]]></content>
    
    
    <summary type="html">快来看看我的图床方案吧！</summary>
    
    
    
    <category term="图床" scheme="https://hexo.shangskr.top/categories/%E5%9B%BE%E5%BA%8A/"/>
    
    
    <category term="图床" scheme="https://hexo.shangskr.top/tags/%E5%9B%BE%E5%BA%8A/"/>
    
    <category term="cloudflare" scheme="https://hexo.shangskr.top/tags/cloudflare/"/>
    
    <category term="backblaze" scheme="https://hexo.shangskr.top/tags/backblaze/"/>
    
  </entry>
  
  <entry>
    <title>DUAL同屏小游戏</title>
    <link href="https://hexo.shangskr.top/posts/7.html"/>
    <id>https://hexo.shangskr.top/posts/7.html</id>
    <published>2023-02-04T11:15:26.000Z</published>
    <updated>2023-07-15T03:20:19.430Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DUAL——（一款需要有面对面朋友才能玩的小游戏）—最后有下载地址"><a href="#DUAL——（一款需要有面对面朋友才能玩的小游戏）—最后有下载地址" class="headerlink" title="DUAL——（一款需要有面对面朋友才能玩的小游戏）—最后有下载地址"></a>DUAL——（一款需要有面对面朋友才能玩的小游戏）—最后有下载地址</h2><p> 详细信息：<br> DUAL游戏，这个游戏比较合适情侣玩，因为这是一款双人联网手游。玩法简便，小伙伴们只需要学会操纵飞机的飞行方向与速度就能够了。并且，这个DUAL游戏上的关卡全是精心准备的，玩家们不断闯关升级自己的武器，还能够丰富自己的业余生活哦。<br> 官网图片展示：<br><img src="https://b2.shangskr.top/DUAL同屏/1.webp" alt=""><br><img src="https://b2.shangskr.top/DUAL同屏/2.webp" alt=""><br><img src="https://b2.shangskr.top/DUAL同屏/3.webp" alt=""></p><h2 id="游戏特色"><a href="#游戏特色" class="headerlink" title="游戏特色"></a>游戏特色</h2><p> DUAL 是一款双人联机射击游戏，可以通过 WiFi 和蓝牙进行本地联机，双方都要通过对方的屏幕或者设计方向来猜测对方的位置进行攻击。</p><h2 id="游戏玩法"><a href="#游戏玩法" class="headerlink" title="游戏玩法"></a>游戏玩法</h2><p> 我们姑且把玩家操纵的物体叫做「飞船」，游戏的操纵方式十分简单。玩家通过倾斜手机可以控制飞机移动，点击屏幕可以发射子弹，长按屏幕可以蓄力发出更具威力的攻击。</p><h2 id="游戏说明"><a href="#游戏说明" class="headerlink" title="游戏说明"></a>游戏说明</h2><p> 游戏的常规玩法是两个人面对面，不仅要观察自己的屏幕，也要看对面的屏幕，在攻击对手的同时躲避敌人的攻击。如果想挑战更高难度的话，可以试试不看对方屏幕，通过对方的攻击判断对方的位置哦。<br><img src="https://b2.shangskr.top/DUAL同屏/4.webp" alt=""></p><h2 id="DUAL游戏新闻"><a href="#DUAL游戏新闻" class="headerlink" title="DUAL游戏新闻"></a>DUAL游戏新闻</h2><p> DUAL可以通过购买解锁更多的模式和武器，只要两人中其中一人购买过即可。不付费只能玩普通模式。考虑到 Android 的付费版有钱也买不到，小美特地试了一下，DUAL 可以跨平台联机。iOS 和 Android 是可以联机的，所以 Android 用户可以去找用 iOS 的小伙伴玩哦。</p><h2 id="DUAL游戏内容"><a href="#DUAL游戏内容" class="headerlink" title="DUAL游戏内容"></a>DUAL游戏内容</h2><p> 作为单身狗在家是没办法愉快的玩这种双人游戏了，如果你有一个 TA，可以陪你一起 DUAL！这就是一个小游戏，很适合两人休闲玩，用胜负来决定谁去做完洗碗什么的也是可以的哈哈哈~</p><h2 id="DUAL游戏测评"><a href="#DUAL游戏测评" class="headerlink" title="DUAL游戏测评"></a>DUAL游戏测评</h2><p> 此游戏支持<strong>中文</strong>，这款游戏也是一个比较有意思的联机可以和自己的朋友双人对打的游戏，可以和朋友互相的射击，只需要wifi和蓝牙进行联机就可以了，非常的方便，适合大家聚会或者小情侣来一起玩哦，参与性互动性特别的高，赶紧来下载DUAL试试吧！<br> 当你打开后你会看见是英文的<br><img src="https://b2.shangskr.top/DUAL同屏/5.webp" alt=""><br> 1.接下来切换为中文（右滑动屏幕，左下角出现language，点击它，就可以切换了，切换方式就是长按选定）如图<br><img src="https://b2.shangskr.top/DUAL同屏/6.webp" alt=""><br><img src="https://b2.shangskr.top/DUAL同屏/7.webp" alt=""><br> 长按右下角箭头就可以切换<br> 进入每一个模式他会有教学部分（注意，“跳过”“skip”这个文字是可以按住的，长按跳过教学）<br><img src="https://b2.shangskr.top/DUAL同屏/8.webp" alt=""><br> 剩下的你就可以玩了，在他需要的环境下，和小伙伴一起玩。<br> <a href="https://yuwushang.lanzouf.com/idokQ0mlvqof" title="下载地址">下载地址</a>（点击下载）<br> 密码为1234<br> 注：（如果打不开，请把链接中的lanzouf中的f更改为x或者i等等就可以打开了）</p>]]></content>
    
    
    <summary type="html">一个只能和小伙伴玩的游戏</summary>
    
    
    
    <category term="安卓" scheme="https://hexo.shangskr.top/categories/%E5%AE%89%E5%8D%93/"/>
    
    
    <category term="安卓" scheme="https://hexo.shangskr.top/tags/%E5%AE%89%E5%8D%93/"/>
    
    <category term="DUAL" scheme="https://hexo.shangskr.top/tags/DUAL/"/>
    
    <category term="小游戏" scheme="https://hexo.shangskr.top/tags/%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>RDPWrap破解Windows多用户远程桌面</title>
    <link href="https://hexo.shangskr.top/posts/6.html"/>
    <id>https://hexo.shangskr.top/posts/6.html</id>
    <published>2023-01-07T14:34:05.000Z</published>
    <updated>2023-07-15T03:30:45.072Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、RDPWrap是什么"><a href="#1、RDPWrap是什么" class="headerlink" title="1、RDPWrap是什么"></a>1、RDPWrap是什么</h2><p> github上面介绍很详细<br> 地址：(1)<a href="https://github.com/loyejaotdiqr47123/rdpwrap">https://github.com/loyejaotdiqr47123/rdpwrap</a> （长期更新）“rdpwrap.exe”的版本更高。<br> (2)<a href="https://github.com/stascorp/rdpwrap">https://github.com/stascorp/rdpwrap</a>   (未知更新)“rdpwrap.exe”的版本较低<br> 2 、所有使用的工具下载地址<br> 地址：<a href="https://yuwushang.lanzouf.com/b041nfpqf" title="工具包">工具包</a>密码为1234 （请自行选择版本，提倡使用最高版本）注：（如果打不开，请把链接中的lanzouf中的f更改为x或者i等等就可以打开了）<br> 3、安装RDPWrap-v1.6.2<br> 解压安装包后以管理员身份运行install.bat（用来安装配置）<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/1.webp" alt=""><br> 启动以后等待出来红色方框里面的内容按任意键退出<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/2.webp" alt=""><br> 启动RDPConf.exe（此文件用来检测上一步是否安装成功）<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/3.webp" alt=""><br> 打开以后方框内的红色文字一致就说明安装完成（下面勾选的要和图片一致）<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/4.webp" alt=""><br> 当微软更新补丁以后，都需要检测一下是否破解有效<br> 如果解锁无效，需要以管理员身份运行下图的update程序，然后再检测是否有效<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/5.webp" alt=""><br> 下图的uninstall命令是用来解除windows多开功能，恢复原始状态（需要以管理员身份运行）<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/6.webp" alt=""><br> 当满足下图方框内的文字时就说明破解成功了，就可以多开windows连接了<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/4.webp" alt=""><br> 4、启动RDPConf.exe后可能会遇到“not supported”<br> 这是配置的问题，需要解决。<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/6.1.webp" alt=""></p><h2 id="运行安装install-bat会在C-Program-Files-RDP-Wrapper下面生成2个文件：rdpwrap-dll，rdpwrap-ini（配置文件）"><a href="#运行安装install-bat会在C-Program-Files-RDP-Wrapper下面生成2个文件：rdpwrap-dll，rdpwrap-ini（配置文件）" class="headerlink" title="运行安装install.bat会在C:\Program Files\RDP Wrapper下面生成2个文件：rdpwrap.dll，rdpwrap.ini（配置文件）"></a>运行安装install.bat会在C:\Program Files\RDP Wrapper下面生成2个文件：rdpwrap.dll，rdpwrap.ini（配置文件）</h2><p> rdpwrap.ini配置文件是用来加载termsrv.dll，rdpwrap.ini文件内容如下<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/7.webp" alt=""><br> 10.0.17763.1是系统版本，是需要编写成系统匹配的版本时，这个配置文件才会加载系统termsrv.dll<br> 查看系统版本号<br> windows+R输入winver,如果系统版本在配置文件中没有就需要手动编写或直接在GitHub上复制其他人的系统配置文件<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/8.webp" alt=""><br> rdpwrap.ini配置文件写入生成</p><h2 id="（方法1）"><a href="#（方法1）" class="headerlink" title="（方法1）"></a>（方法1）</h2><p> 在github issues上面查找到与自己系统匹配的版本，复制配置文件脚本到自己的rdpwrap.ini文件中<br> 地址：<a href="https://github.com/stascorp/rdpwrap/issues">https://github.com/stascorp/rdpwrap/issues</a><br> 找到支持的就可以<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/9.webp" alt=""><br> 注意：rdpwrap.ini配置文件修改后需要重新启动服务才能生效<br><code>停止服务net stop termservice启动服务net start termservice</code><br> windows+R输入cmd，打开以后重新启动服务：如图<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/10.webp" alt=""><br> 然后“not supported”的问题就解了</p><h2 id="（方法2）"><a href="#（方法2）" class="headerlink" title="（方法2）"></a>（方法2）</h2><p> 使用软件rdpwup自动生成，启动rdpwup.exe,等待工具自动扫描，然后点击update，会自动在C:\Program Files\RDP Wrapper\rdpwrap.ini 文件中自动生成配置信息<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/11.webp" alt=""><br> 自动生成配置信息<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/12.webp" alt=""><br> 重启服务，启动RDPConf.exe<br><img src="https://b2.shangskr.top/RDP破解win多用户连接/13.webp" alt=""><br> 以上两种方法用来解决“not supported”<br> 当运行RDPConf.exe看到的是“fully supported”，就破解成功了。可以实现多用户登入一台电脑。<br> 多用户登入一台电脑，如果需要限制硬盘（文件）的使用权限请另外对用户进行设置！</p><h2 id="今天就到这里了，拜拜咯。"><a href="#今天就到这里了，拜拜咯。" class="headerlink" title="今天就到这里了，拜拜咯。"></a>今天就到这里了，拜拜咯。</h2>]]></content>
    
    
    <summary type="html">emmm，不知道说啥了。</summary>
    
    
    
    <category term="windows" scheme="https://hexo.shangskr.top/categories/windows/"/>
    
    
    <category term="RDPWrap" scheme="https://hexo.shangskr.top/tags/RDPWrap/"/>
    
    <category term="Windows" scheme="https://hexo.shangskr.top/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>申请免费UNIX服务器</title>
    <link href="https://hexo.shangskr.top/posts/5.html"/>
    <id>https://hexo.shangskr.top/posts/5.html</id>
    <published>2022-12-22T14:26:42.000Z</published>
    <updated>2023-07-08T13:37:27.220Z</updated>
    
    <content type="html"><![CDATA[<p>Unix是20世纪70年代初出现的一个操作系统，除了作为网络操作系统之外，还可以作为单机操作系统使用。Unix作为一种开发平台和台式操作系统获得了广泛使用，主要用于工程应用和科学计算等领域。</p><h2 id="发展历史："><a href="#发展历史：" class="headerlink" title="发展历史："></a>发展历史：</h2><p> 1.UNIX系统是一个分时系统。最早的UNIX系统于1970年问世。此前，只有面向批处理作业的操作系统，这样的系统对于需要立即得到响应的用户来说是太慢了。在60年代末，Kenneth Thompson和Dennis Ritchie都曾参加过交互方式分时系统Multics的设计，而开发该系统所使用的工具是CTSS。这两个系统在操作系统的发展过程中都产生过重大影响。在此基础上，在对当时现有的技术进行精选提炼和发展的过程中，K.Thompson于1969年在小型计算机上开发UNIX系统，后于1970年投入运行。<br> 2.1972年，DennisRitchie开发出C语言，用来改写原来用汇编语言编写的UNIX，由此产生了UNIX VersionV。1974年，Kenneth Thompson和Dennis Ritchie合写的“The UNIX Time-Sharing System”在Communication of ACM上发表，正式向外界披露了UNIX系统。</p><h2 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h2><p> 1.首先去网站注册（这里有两个网站都可以用）<br>（1）<a href="http://sdf.org/">http://sdf.org/</a><br>（2）<a href="http://freeshell.org/">http://freeshell.org/</a><br> 打开网站按下图填写的注册<br><img src="https://b2.shangskr.top/UNIX服务器图文/1.webp" alt=""><br> 2.注册好以后去你的邮箱找到一封SDF发来的邮件（这封邮件，里面有你的账号密码等等）注：邮箱如果没有记得去垃圾箱看看<br> 3.然后打开sdf连接工具这里我用（Termius）为例子，打开以后新建一个。<br><img src="https://b2.shangskr.top/UNIX服务器图文/2.webp" alt=""><br> 创建一个新主机<br><img src="https://b2.shangskr.top/UNIX服务器图文/3.webp" alt=""><br> 4.然后根据邮件的内容填写账号密码等等…<br><img src="https://b2.shangskr.top/UNIX服务器图文/4.webp" alt=""><br> 填写好后保存<br> 然后双击打开…等待连接<br><img src="https://b2.shangskr.top/UNIX服务器图文/5.webp" alt=""><br> 5.连接成功以后会让你输入key，这里直接跳过（按空格键跳过）<br><img src="https://b2.shangskr.top/UNIX服务器图文/6.webp" alt=""><br> 6.然后你就成功进入了UNIX，剩下的学习可以去百度，关于UNIX我只知道这些了。<br>最后附上效果图：<br><img src="https://b2.shangskr.top/UNIX服务器图文/7.webp" alt=""></p><h2 id="没用的知识又增加了！！！"><a href="#没用的知识又增加了！！！" class="headerlink" title="没用的知识又增加了！！！"></a>没用的知识又增加了！！！</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Unix是20世纪70年代初出现的一个操作系统，除了作为网络操作系统之外，还可以作为单机操作系统使用。Unix作为一种开发平台和台式操作系统获得了广泛使用，主要用于工程应用和科学计算等领域。&lt;/p&gt;
&lt;h2 id=&quot;发展历史：&quot;&gt;&lt;a href=&quot;#发展历史：&quot; class</summary>
      
    
    
    
    <category term="其它" scheme="https://hexo.shangskr.top/categories/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="免费UNIX服务器" scheme="https://hexo.shangskr.top/tags/%E5%85%8D%E8%B4%B9UNIX%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>国内访问github慢我来教你</title>
    <link href="https://hexo.shangskr.top/posts/4.html"/>
    <id>https://hexo.shangskr.top/posts/4.html</id>
    <published>2022-12-20T14:26:40.000Z</published>
    <updated>2023-07-15T03:30:45.003Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Github-增强-高速下载"><a href="#Github-增强-高速下载" class="headerlink" title="Github 增强 - 高速下载"></a>Github 增强 - 高速下载</h2><p> 1.使用油猴脚本<br> 该脚本有什么用？<br> 安装后为 Github 的 Git Clone/SSH、Release、Raw、Code(ZIP) 等任何需要下载的文件添加 高速下载（加速下载）！<br>（1）请确保已安装 Tampermonkey 正式版 扩展（脚本管理器）<br> 注意：在 Safari 浏览器上访问 Github 时，是无法运行任何油猴脚本的，具体原因请见：#110202<br>（2）如何安装/使用该脚本？<br> 要使用该脚本，需要浏览器安装一个 Tampermonkey 脚本管理器扩展（在浏览器的扩展功能中可以搜索到该插件）。<br> 其他基于 Chromium 内核的浏览器（如国内套皮浏览器）都可以使用 Chrome 的扩展。<br> 请确保使用 Tampermonkey 正式版 扩展，其他的用户脚本管理器可能导致无法正常使用脚本。<br> 如果要重装脚本，请记得在 Tampermonkey 扩展的回收站中彻底删除脚本后再去重新安装脚本。<br>（3）原理是什么？<br> 目前有很多 Github 文件下载加速的网站或开源项目，脚本只是将加速后的文件下载地址添加到了网页，省去了手动获取的麻烦，方便直接点击高速下载！</p><p> 正常来说从 Github 下载文件可能并没那么慢，但是 Github 经常会被干扰、限制，导致速度慢甚至完全无法访问，因此只要你链接加速源的速度比 Github 原生用的 CDN 速度更快，就是加速下载啦 ~<br> 该油猴脚本插件安装链接：<a href="https://greasyfork.org/zh-CN/scripts/412245-github-%E5%A2%9E%E5%BC%BA-%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD" title="Github 增强加速下载">Github 增强加速下载</a><br> 效果图：<br><img src="https://b2.shangskr.top/github加速/3.webp" alt=""><br> 2.用github插件来加速<br> 插件下载链接：<a href="https://yuwushang.lanzouf.com/b041kaj9e" title="github浏览器插件">github浏览器插件</a>密码为1234   注：（如果打不开，请把链接中的lanzouf中的f更改为x或者i等等就可以打开了）<br> （1）将该插件安装进浏览器的扩展功能 如图：<br><img src="https://b2.shangskr.top/github加速/github插件教程.webp" alt=""><br> （2）然后打开该插件的选项功能导入下面的公益加速镜像链接：<br><a href="https://hub.fastgit.xyz">https://hub.fastgit.xyz</a><br><a href="https://gh.api.99988866.xyz">https://gh.api.99988866.xyz</a><br><a href="https://gh.con.sh">https://gh.con.sh</a><br><a href="https://gh.ddlc.top">https://gh.ddlc.top</a><br><a href="https://gh2.yanqishui.work">https://gh2.yanqishui.work</a><br><a href="https://ghdl.feizhuqwq.cf">https://ghdl.feizhuqwq.cf</a><br><a href="https://ghproxy.com">https://ghproxy.com</a><br><a href="https://ghps.cc">https://ghps.cc</a><br><a href="https://git.xfj0.cn">https://git.xfj0.cn</a><br><a href="https://github.91chi.fun">https://github.91chi.fun</a><br><a href="https://proxy.zyun.vip">https://proxy.zyun.vip</a><br><a href="https://gh.gh2233.ml">https://gh.gh2233.ml</a><br><a href="https://gh.api.99988866.xyz">https://gh.api.99988866.xyz</a><br><a href="https://gh2.yanqishui.work">https://gh2.yanqishui.work</a><br><a href="https://ghdl.feizhuqwq.cf">https://ghdl.feizhuqwq.cf</a><br><a href="https://gh.ddlc.top">https://gh.ddlc.top</a><br><a href="https://gh-proxy-misakano7545.koyeb.app">https://gh-proxy-misakano7545.koyeb.app</a><br><a href="https://gh.flyinbug.top">https://gh.flyinbug.top</a><br><a href="https://github.91chi.fun">https://github.91chi.fun</a><br><a href="https://proxy.zyun.vip">https://proxy.zyun.vip</a><br><a href="https://git.xfj0.cn">https://git.xfj0.cn</a><br><a href="https://gh.con.sh">https://gh.con.sh</a><br><a href="https://ghps.cc">https://ghps.cc</a><br><a href="https://cors.isteed.cc">https://cors.isteed.cc</a><br><a href="https://cdn.githubjs.cf">https://cdn.githubjs.cf</a><br><a href="https://download.njuu.cf">https://download.njuu.cf</a><br><a href="https://download.yzuu.cf">https://download.yzuu.cf</a><br><a href="https://download.nuaa.cf">https://download.nuaa.cf</a><br><a href="https://download.fastgit.org">https://download.fastgit.org</a><br><a href="https://ghproxy.com">https://ghproxy.com</a><br> 然后就可以了</p><h2 id="其插件也可以加速Git-Clone，公益链接如下"><a href="#其插件也可以加速Git-Clone，公益链接如下" class="headerlink" title="其插件也可以加速Git Clone，公益链接如下:"></a>其插件也可以加速Git Clone，公益链接如下:</h2><p><a href="https://gitclone.com">https://gitclone.com</a>  中国 国内（由 GitClone 提供<br><a href="https://ghproxy.com">https://ghproxy.com</a> 韩国 首尔（由 ghproxy 提供<br><a href="https://kgithub.com">https://kgithub.com</a> 新加坡（由 KGitHub 提供<br><a href="https://github.moeyy.xyz">https://github.moeyy.xyz</a>  新加坡（由 Moeyy 提供<br><a href="https://hub.njuu.cf">https://hub.njuu.cf</a> 美国（由 LibraryCloud 提供<br><a href="https://hub.yzuu.cf">https://hub.yzuu.cf</a> 美国（由 LibraryCloud 提供<br><a href="https://hub.nuaa.cf">https://hub.nuaa.cf</a> 美国（由 LibraryCloud 提供<br> 同样的操作就可以</p><h2 id="3-使用软件加速（个人推荐软件加速，比较快）分别有win-linux-mac三个版本：这里我以win做演示"><a href="#3-使用软件加速（个人推荐软件加速，比较快）分别有win-linux-mac三个版本：这里我以win做演示" class="headerlink" title="3.使用软件加速（个人推荐软件加速，比较快）分别有win,linux,mac三个版本：这里我以win做演示"></a>3.使用软件加速（个人推荐软件加速，比较快）分别有win,linux,mac三个版本：这里我以win做演示</h2><p> 下载链接：<a href="https://yuwushang.lanzouf.com/b041n9w4j" title="github加速软件">github加速软件</a>密码为1234   注：（如果打不开，请把链接中的lanzouf中的f更改为x或者i等等就可以打开了）<br>（1）这里解压好以后里面有2个exe文件，(序号1)带图标的是一个加了UI的exe文件.（序号2）是一个简洁的exe文件。个人使用的是序号2.当然这两个都可以。<br><img src="https://b2.shangskr.top/github加速/1.webp" alt=""><br>（2）这里我用的序号2，打开做演示，如图：<br><img src="https://b2.shangskr.top/github加速/2.webp" alt=""><br> 然后就可以访问github官网了！<br> 如果你有更好的方法，希望做做指教！</p>]]></content>
    
    
    <summary type="html">方法很多，有待更新。</summary>
    
    
    
    <category term="github" scheme="https://hexo.shangskr.top/categories/github/"/>
    
    
    <category term="github" scheme="https://hexo.shangskr.top/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>免魔法注册freenom域名的插件和规则导入</title>
    <link href="https://hexo.shangskr.top/posts/3.html"/>
    <id>https://hexo.shangskr.top/posts/3.html</id>
    <published>2022-12-16T14:19:15.000Z</published>
    <updated>2023-07-08T13:37:27.200Z</updated>
    
    <content type="html"><![CDATA[<h2 id="免魔法注册freenom域名的插件安装"><a href="#免魔法注册freenom域名的插件安装" class="headerlink" title="免魔法注册freenom域名的插件安装"></a>免魔法注册freenom域名的插件安装</h2><p> 1.下面的官网<br><a href="https://he.firefoxcn.net/" title="Header Editor">Header Editor</a><br><img src="https://b2.shangskr.top/freenom免魔法插件图文/1.webp" alt=""><br> 2.点击开始使用<br><img src="https://b2.shangskr.top/freenom免魔法插件图文/2.webp" alt=""><br> 3.你没有前3个浏览器可以点击自分发版本跳转到github<br><img src="https://b2.shangskr.top/freenom免魔法插件图文/3.webp" alt=""><br> 4.根据你的版本下载你需要的插件源码<br> 5.打开你的浏览器的扩展插件选择开发者选项，导入刚才下载并解压出来的文件<br><img src="https://b2.shangskr.top/freenom免魔法插件图文/4.webp" alt=""><br> 6.点击它然后管理<br><img src="https://b2.shangskr.top/freenom免魔法插件图文/5.webp" alt=""><br> 7.然后选择导入和导出<br><img src="https://b2.shangskr.top/freenom免魔法插件图文/6.webp" alt=""><br><img src="https://b2.shangskr.top/freenom免魔法插件图文/7.webp" alt=""><br>规则（链接）：<a href="https://github.azurezeng.com/static/HE-GoogleRedirect.json">https://github.azurezeng.com/static/HE-GoogleRedirect.json</a><br> 8.记得点击保存<br><img src="https://b2.shangskr.top/freenom免魔法插件图文/8.webp" alt=""><br> 9.然后返回查看是否开启<br><img src="https://b2.shangskr.top/freenom免魔法插件图文/9.webp" alt=""><br> 10.最后如果全部开启，你就可以不用魔法注册freenom的域名了<br><img src="https://b2.shangskr.top/freenom免魔法插件图文/10.webp" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;免魔法注册freenom域名的插件安装&quot;&gt;&lt;a href=&quot;#免魔法注册freenom域名的插件安装&quot; class=&quot;headerlink&quot; title=&quot;免魔法注册freenom域名的插件安装&quot;&gt;&lt;/a&gt;免魔法注册freenom域名的插件安装&lt;/h2&gt;&lt;p&gt; 1</summary>
      
    
    
    
    <category term="freenom" scheme="https://hexo.shangskr.top/categories/freenom/"/>
    
    
    <category term="freenom" scheme="https://hexo.shangskr.top/tags/freenom/"/>
    
  </entry>
  
  <entry>
    <title>添加blog评论系统，并管理。</title>
    <link href="https://hexo.shangskr.top/posts/2.html"/>
    <id>https://hexo.shangskr.top/posts/2.html</id>
    <published>2022-12-12T14:16:59.000Z</published>
    <updated>2023-07-15T03:30:45.027Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用-Waline，只需几个步骤，你就可以在你的网站中启用-Waline-提供评论与浏览量服务。"><a href="#使用-Waline，只需几个步骤，你就可以在你的网站中启用-Waline-提供评论与浏览量服务。" class="headerlink" title="使用 Waline，只需几个步骤，你就可以在你的网站中启用 Waline 提供评论与浏览量服务。"></a>使用 Waline，只需几个步骤，你就可以在你的网站中启用 Waline 提供评论与浏览量服务。</h2><p> LeanCloud 设置 (数据库LeanCloud 设置 (数据库)<br>1.<a href="https://console.leancloud.app/login" title="登入">登入</a> 或 <a href="https://console.leancloud.app/register" title="注册">注册</a> LeanCloud 国际版 并进入<a href="https://console.leancloud.app/apps" title="控制台">控制台</a></p><p>2.点击左上角 <a href="https://console.leancloud.app/apps" title="创建应用">创建应用</a> 并起一个你喜欢的名字 (请选择免费的开发版):<br><img src="https://b2.shangskr.top/blog评论系统/1.webp" alt=""><br>3.进入应用，选择左下角的 设置 &gt; 应用 Key。你可以看到你的 APP ID,APP Key 和 Master Key。请记录它们，以便后续使用。<br><img src="https://b2.shangskr.top/blog评论系统/2.webp" alt=""><br><strong>同时你要在LeanCloud 设置中的</strong>：<strong>数据存储</strong> <strong>结构化数据</strong>中新创建两个class  分别命名为：<strong>Comment</strong>和<strong>Counter</strong>   (注意设置过程中，应全部改为：<strong>所有人可见</strong>)<br> 注：国内版需要完成备案接入</p><p>如果你正在使用 Leancloud 国内版 (<a href="https://www.leancloud.cn/" title="leancloud.cn">leancloud.cn</a>)，我们推荐你切换到国际版 (<a href="https://leancloud.app/" title="leancloud.app">leancloud.app</a>)。否则，你需要为应用额外绑定已备案的域名，同时购买独立 IP 并完成备案接入:<br>登录国内版并进入需要使用的应用<br>选择 <strong>设置</strong> &gt; <strong>域名绑定</strong> &gt; <strong>API 访问域名</strong> &gt; <strong>绑定新域名<br>输入域名</strong> &gt; <strong>绑定新域名<br>输入域名</strong> &gt; 确定。<br>按照页面上的提示按要求在 DNS 上完成 CNAME 解析。<br>购买独立 IP 并提交工单完成备案接入。(独立 IP 目前价格为 ￥ 50/个/月)<br><img src="https://b2.shangskr.top/blog评论系统/3.webp" alt=""></p><h2 id="Vercel-部署-服务端"><a href="#Vercel-部署-服务端" class="headerlink" title="Vercel 部署 (服务端)"></a>Vercel 部署 (服务端)</h2><p><a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fwalinejs%2Fwaline%2Ftree%2Fmain%2Fexample" title="Deploy">Deploy</a><br>1.点击上方按钮，跳转至 Vercel 进行 Server 端部署。<br><strong>注</strong>：如果你未登录的话，Vercel 会让你注册或登录，请使用 GitHub 账户进行快捷登录。</p><p>2.输入一个你喜欢的 Vercel 项目名称并点击 Create 继续:<br><img src="https://b2.shangskr.top/blog评论系统/4.webp" alt=""><br>3.此时 Vercel 会基于 Waline 模板帮助你新建并初始化仓库，仓库名为你之前输入的项目名。<br><img src="https://b2.shangskr.top/blog评论系统/5.webp" alt=""><br>一两分钟后，满屏的烟花会庆祝你部署成功。此时点击 <strong>Go to Dashboard</strong> 可以跳转到应用的控制台。<br><img src="https://b2.shangskr.top/blog评论系统/6.webp" alt=""><br>4.点击顶部的 <strong>Settings</strong> - <strong>Environment Variables</strong> 进入环境变量配置页，并配置三个环境变量 <strong>LEAN_ID</strong>, <strong>LEAN_KEY</strong> 和 <strong>LEAN_MASTER_KEY</strong> 。它们的值分别对应上一步在 LeanCloud 中获得的 <strong>APP ID</strong>, <strong>APP KEY</strong>, <strong>Master Key</strong><br><img src="https://b2.shangskr.top/blog评论系统/7.webp" alt=""><br><strong>注：</strong>如果你使用 LeanCloud 国内版，请额外配置 LEAN_SERVER 环境变量，值为你绑定好的域名。<br>5.绑定域名<br>1.点击顶部的 <strong>Settings</strong> - <strong>Domains</strong> 进入域名配置页<br>2.输入需要绑定的域名并点击<strong> Add</strong><br><strong>注：</strong>vercel.app DNS被污染了，导致评论失效，所以要绑定域名。（才会有效果）<br><img src="https://b2.shangskr.top/blog评论系统/8.webp" alt=""><br>3.在域名服务器商处添加新的 <strong>CNAME</strong> 解析记录<br>| Type  |CNAME   |<br>| Name  | example |    (example：你可以改成你喜欢的)<br>| Value  | cname.vercel-dns.com  |<br>这里我用的<strong>cloudflare</strong>解析的，应用到一个步骤，不然你还是无法访问：打开<strong>cloudflare</strong>将你的域名<strong>ssl证书</strong>变成<strong>完全</strong>即可<br><img src="https://b2.shangskr.top/blog评论系统/10.webp" alt=""></p><p>4.等待生效，你可以通过自己的域名来访问了<br>评论系统：example.yourdomain.com<br>评论管理：example.yourdomain.com/ui<br><img src="https://b2.shangskr.top/blog评论系统/9.webp" alt=""><br>5.然后在重新部署一下，使刚刚的变量产生作用。<br>环境变量配置完成之后点击顶部的 <strong>Deployments</strong> 点击顶部最新的一次部署右侧的<strong> Redeploy </strong>按钮进行重新部署。该步骤是为了让刚才设置的环境变量生效。<br>6.此时会跳转到 <strong>Overview</strong> 界面开始部署，等待片刻后 <strong>STATUS </strong>会变成 <strong>Ready</strong>。此时请点击 <strong>Visit</strong> ，即可跳转到部署好的网站地址，此地址即为你的服务端地址。<br>这个时候如果你的域名可以访问了那么你就会看到下图：<br><img src="https://b2.shangskr.top/blog评论系统/11.webp" alt=""></p><p>将此评论系统引入</p><h2 id="HTML-引入-客户端"><a href="#HTML-引入-客户端" class="headerlink" title="HTML 引入 (客户端)"></a>HTML 引入 (客户端)</h2><p>在你的网页中进行如下设置:<br>1.导入 Waline 样式<br><code>https://unpkg.com/@waline/client@v2/dist/waline.css</code></p><p>2.创建 <strong>&lt;script＞</strong> 标签使用来自 <code>https://unpkg.com/@waline/client@v2/dist/waline.mjs</code> 的 <code>init()</code> 函数初始化，并传入必要的 <strong><code>el</code></strong> 与 <strong><code>serverURL</code></strong> 选项。</p><p><code>el</code> 选项是 Waline 渲染使用的元素，你可以设置一个字符串形式的 CSS 选择器或者一个 HTMLElement 对象。<br><strong>serverURL</strong> 是服务端的地址，即上一步获取到的值。<br>serverURL：后面输入你刚刚绑定的评论系统的域名即可<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">    <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">href</span>=<span class="string">&quot;https://unpkg.com/@waline/client@v2/dist/waline.css&quot;</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;waline&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;module&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">import</span> &#123; init &#125; <span class="keyword">from</span> <span class="string">&#x27;https://unpkg.com/@waline/client@v2/dist/waline.mjs&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">init</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">el</span>: <span class="string">&#x27;#waline&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">serverURL</span>: <span class="string">&#x27;https://your-domain.vercel.app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">  &lt;/script＞</span></span><br><span class="line"><span class="language-javascript">&lt;/body&gt;</span></span><br></pre></td></tr></table></figure></p><p>3.评论服务此时就会在你的网站上成功运行</p><h4 id="评论管理-管理端"><a href="#评论管理-管理端" class="headerlink" title="评论管理 (管理端)"></a>评论管理 (管理端)</h4><p>1.部署完成后，请访问 <code>&lt;serverURL&gt;/ui/register</code> 进行注册。首个注册的人会被设定成管理员。<br>2.管理员登陆后，即可看到评论管理界面。在这里可以修改、标记或删除评论。<br>3.用户也可通过评论框注册账号，登陆后会跳转到自己的档案页。</p><p> 以上步骤完成后你的blog重新发布一篇文章就可以评论了。</p>]]></content>
    
    
    <summary type="html">凑字数的咯！</summary>
    
    
    
    <category term="hexo" scheme="https://hexo.shangskr.top/categories/hexo/"/>
    
    
    <category term="waline" scheme="https://hexo.shangskr.top/tags/waline/"/>
    
    <category term="评论系统" scheme="https://hexo.shangskr.top/tags/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>将freenom的域名托管到cloudflare上</title>
    <link href="https://hexo.shangskr.top/posts/1.html"/>
    <id>https://hexo.shangskr.top/posts/1.html</id>
    <published>2022-12-09T14:12:42.000Z</published>
    <updated>2023-07-08T13:37:27.116Z</updated>
    
    <content type="html"><![CDATA[<p>2022-12-09 08:24:34 星期五<br>用cloudflare搭建网站，无需服务器，仅需要一个域名即可食用。</p><h2 id="首先你需要申请一个域名或购买，这里我以freenom为例。"><a href="#首先你需要申请一个域名或购买，这里我以freenom为例。" class="headerlink" title="首先你需要申请一个域名或购买，这里我以freenom为例。"></a>首先你需要申请一个域名或购买，这里我以freenom为例。</h2><p><img src="https://b2.shangskr.top/freenom域名托管cf图文/1.webp" alt=""><br> 然后打开cf根据下图：<br><img src="https://b2.shangskr.top/freenom域名托管cf图文/2.webp" alt=""><br> 将域名添加进去<br><img src="https://b2.shangskr.top/freenom域名托管cf图文/3.webp" alt=""><br> 当然这里你可以选择付费，白嫖的也不错，果断选择0元。<br><img src="https://b2.shangskr.top/freenom域名托管cf图文/4.webp" alt=""></p><h2 id="根据图示：继续"><a href="#根据图示：继续" class="headerlink" title="根据图示：继续"></a>根据图示：继续</h2><p><img src="https://b2.shangskr.top/freenom域名托管cf图文/5.webp" alt=""><br><img src="https://b2.shangskr.top/freenom域名托管cf图文/6.webp" alt=""><br> 继续点击完成并检测：<br><img src="https://b2.shangskr.top/freenom域名托管cf图文/7.webp" alt=""><br> 下面这几步直接照做就可以：<br><img src="https://b2.shangskr.top/freenom域名托管cf图文/8.webp" alt=""><br><img src="https://b2.shangskr.top/freenom域名托管cf图文/9.webp" alt=""><br><img src="https://b2.shangskr.top/freenom域名托管cf图文/10.webp" alt=""><br><img src="https://b2.shangskr.top/freenom域名托管cf图文/11.webp" alt=""><br><img src="https://b2.shangskr.top/freenom域名托管cf图文/12.webp" alt=""></p><h2 id="上述步骤完成后讲自动跳转到这里："><a href="#上述步骤完成后讲自动跳转到这里：" class="headerlink" title="上述步骤完成后讲自动跳转到这里："></a>上述步骤完成后讲自动跳转到这里：</h2><p><img src="https://b2.shangskr.top/freenom域名托管cf图文/13.webp" alt=""><br> 然后打开freenom我的域名，管理域名页面如下图：<br><img src="https://b2.shangskr.top/freenom域名托管cf图文/14.webp" alt=""></p><p> 然后将cf提供的两个名称复制进去：<br><img src="https://b2.shangskr.top/freenom域名托管cf图文/15.webp" alt=""><br> 完成后会有下图提示：<br><img src="https://b2.shangskr.top/freenom域名托管cf图文/16.webp" alt=""><br> 最后回到cf等待即可（通常5分钟之内就完成）：<br><img src="https://b2.shangskr.top/freenom域名托管cf图文/17.webp" alt=""></p><p> 关于托管域名到cf就这些了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2022-12-09 08:24:34 星期五&lt;br&gt;用cloudflare搭建网站，无需服务器，仅需要一个域名即可食用。&lt;/p&gt;
&lt;h2 id=&quot;首先你需要申请一个域名或购买，这里我以freenom为例。&quot;&gt;&lt;a href=&quot;#首先你需要申请一个域名或购买，这里我以fre</summary>
      
    
    
    
    <category term="freenom" scheme="https://hexo.shangskr.top/categories/freenom/"/>
    
    
    <category term="freenom" scheme="https://hexo.shangskr.top/tags/freenom/"/>
    
  </entry>
  
</feed>
